name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip openjdk-8-jdk python3-pip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo-dev cmake libffi-dev libssl-dev wget curl build-essential libffi-dev libssl-dev libxml2-dev libxslt1-dev libjpeg-dev libpng-dev libfreetype6-dev liblcms2-dev libwebp-dev libharfbuzz-dev libfribidi-dev libxcb1-dev
    
    - name: Verify Git installation
      run: |
        git --version
        which git
    
    - name: Install Python dependencies
      run: |
        pip install buildozer cython
    
    - name: Create buildozer.spec if not exists
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi
    
    - name: Update buildozer.spec
      run: |
        sed -i 's/requirements = python3,kivy/requirements = python3,kivy,kivymd,opencv-python,numpy,Pillow,PyYAML,plyer/' buildozer.spec
        sed -i 's/source.main = main.py/source.main = run_android_english.py/' buildozer.spec
        sed -i 's/android.api = 33/android.api = 34/' buildozer.spec
        sed -i 's/android.ndk = 25b/android.ndk = 26b/' buildozer.spec
        sed -i 's/android.sdk = 33/android.sdk = 34/' buildozer.spec
    
    - name: Setup Android SDK manually
      run: |
        # Create Android SDK directory
        mkdir -p /home/runner/.buildozer/android/platform/android-sdk
        
        # Download and install Android SDK command line tools
        cd /home/runner/.buildozer/android/platform/android-sdk
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
        unzip -q commandlinetools-linux-11076708_latest.zip
        mkdir -p cmdline-tools/latest
        mv cmdline-tools/* cmdline-tools/latest/ 2>/dev/null || true
        
        # Create legacy tools directory for buildozer compatibility
        mkdir -p tools/bin
        ln -sf ../cmdline-tools/latest/bin/sdkmanager tools/bin/sdkmanager
        ln -sf ../cmdline-tools/latest/bin/avdmanager tools/bin/avdmanager
        
        # Accept licenses
        mkdir -p licenses
        echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > licenses/android-sdk-license
        echo "84831b9409646a918e30573bab4c9c91346d8abd" > licenses/android-sdk-preview-license
        echo "d975f751698a77b662f1254ddbeed3901e976f5a" > licenses/android-googletv-license
        echo "33b6a2b64607f11b759f320ef9dff4ae5c47d5da" > licenses/android-sdk-arm-dbt-license
        echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > licenses/android-sdk-system-images-license
        
        # Install SDK components
        export ANDROID_HOME=/home/runner/.buildozer/android/platform/android-sdk
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
        yes | sdkmanager --licenses
        sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"
        
        # Verify installation
        ls -la $ANDROID_HOME/tools/bin/
        ls -la $ANDROID_HOME/platform-tools/
        ls -la $ANDROID_HOME/build-tools/
    
    - name: Build APK
      run: |
        export PATH=$PATH:/usr/bin:/bin
        export ANDROID_HOME=/home/runner/.buildozer/android/platform/android-sdk
        export ANDROID_SDK_ROOT=/home/runner/.buildozer/android/platform/android-sdk
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/tools/bin
        
        # Verify tools are accessible
        echo "Checking sdkmanager..."
        ls -la $ANDROID_HOME/tools/bin/sdkmanager || echo "sdkmanager not found"
        which sdkmanager || echo "sdkmanager not in PATH"
        
        # Clean previous build
        rm -rf .buildozer/android/app
        
        # Build with verbose output
        buildozer android debug --verbose
      env:
        BUILD_DEBUG: 1
        P4A_RELEASE_KEYSTORE: ""
        P4A_RELEASE_KEYALIAS: ""
        P4A_RELEASE_KEYSTORE_PASSWD: ""
        P4A_RELEASE_KEYALIAS_PASSWD: ""
        ANDROID_HOME: /home/runner/.buildozer/android/platform/android-sdk
        ANDROID_SDK_ROOT: /home/runner/.buildozer/android/platform/android-sdk
        P4A_DEBUG: 1
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: bin/*.apk
